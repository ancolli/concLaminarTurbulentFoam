/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;
hpos 2.5; // h/2 mm
hneg -2.5;
le 200;
lele 300;
w 1; //w/2
wneg -1;//

e
            (
	            (0.01 0.15 10)    // 10% y-dir, 15% cells, expansion = 10
              (0.49 0.35 11)
	            (0.49 0.35 0.090909)
              (0.01 0.15 0.1) // 10% y-dir, 15% cells, expansion = 0.1
            ) ;

vertices
(
    (0	$hneg $wneg)
    ($le	$hneg $wneg)
    ($le   $hpos $wneg)
    (0  $hpos $wneg)
    (0	$hneg  $w)
    ($le  $hneg $w)
    ($le   $hpos $w)
    (0  $hpos $w)

    ($lele	$hneg $wneg)
    ($lele   $hpos $wneg)
    ($lele  $hneg $w)
    ($lele   $hpos $w)

);

blocks
(
    hex (0 1 2 3 4 5 6 7) (300 120 1) simpleGrading (1 $e 1)
    hex (1 8 9 2 5 10 11 6) (250 120 1) simpleGrading (1 $e 1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (9 11 10 8)
        );
    }

    wall_anode
    {
        type wall;
        faces
        (
            (2 6 11 9)
        );
    }

    wall_cathode
    {
        type wall;
        faces
        (

            (8 10 5 1)
        );
    }

    wall_isolation
    {
        type wall;
        faces
        (

            (1 5 4 0)
            (3 7 6 2)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
	          (1 2 9 8)
	          (5 10 11 6)
        );
    }
);

// ************************************************************************* //
